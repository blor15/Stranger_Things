{"version":3,"sources":["api/utils.js","api/constants.js","components/Login.jsx","api/login.js","api/register.js","api/posts.js","components/UserContext.js","components/Posts.jsx","components/Logout.jsx","components/App.jsx","index.js"],"names":["fetchResource","fail","options","success","url","fetch","then","res","ok","status","json","REQUEST_BASE","Login","prop","clearError","onAuthenticate","onError","useState","username","setUsername","password","setPassword","handleUsernameInputChange","useCallback","event","target","value","handlePasswordInputChange","htmlFor","id","type","onChange","onClick","user","method","headers","body","JSON","stringify","className","getPosts","UserContext","createContext","Posts","posts","setPosts","searchValue","setSearchValue","isAuthed","useContext","filteredPosts","filter","post","title","includes","useEffect","data","console","error","e","map","log","author","_id","location","createdAt","description","price","Logout","props","App","setError","jwt","setJWT","response","token","Provider","to","path","component","style","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb3c7025.chunk.js","sourcesContent":["export const fetchResource = ({\n  fail,\n  options,\n  success,\n  url\n}) =>\n  fetch(url, options).then(\n    res =>\n      !res.ok || res.status >= 400 ? fail(res) : res.json().then(success),\n    fail\n  );","const API_BASE = 'api';\nconst BASE_URL = 'https://strangers-things.herokuapp.com';\nconst COHORT_ID = '2107-CSU-RM-WEB-PT';\n\nexport const REQUEST_BASE = `${BASE_URL}/${API_BASE}/${COHORT_ID}`;","import React, { useCallback, useState } from 'react';\nimport { login } from '../api/login';\nimport { register } from '../api/register';\n\nexport const Login = (prop) => {\n  const { clearError, onAuthenticate, onError } = prop;\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleUsernameInputChange = useCallback((event) => {\n    clearError();\n    setUsername(event.target.value);\n  });\n\n  const handlePasswordInputChange = useCallback((event) => {\n    clearError();\n    setPassword(event.target.value);\n  });\n    \n  return (\n    <section>\n      <label htmlFor=\"UsernameInput\">Username</label>\n      <input id=\"UsernameInput\" type=\"text\" onChange={handleUsernameInputChange} />\n      <label htmlFor=\"PasswordInput\">Password</label>\n      <input id=\"PasswordInput\" type=\"password\" onChange={handlePasswordInputChange} />\n      <button onClick={() => login(onAuthenticate, onError, { username, password })} className=\"btn btn-primary btn-sm\">Log in</button>\n      <button onClick={() => register(onAuthenticate, onError, { username, password })} className=\"btn btn-info btn-sm\">Register</button> \n    </section>\n  )\n};","import { fetchResource } from './utils';\nimport { REQUEST_BASE } from './constants';\n\nexport const login = (success, fail, user) => {\n  fetchResource({\n    url: REQUEST_BASE + '/users/login',\n    options: {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ user })\n    },\n    success,\n    fail\n  });\n};","import { fetchResource } from './utils';\nimport { REQUEST_BASE } from './constants';\n\nexport const register = (success, fail, user) => {\n  fetchResource({\n    url: REQUEST_BASE + '/users/register',\n    options: {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ user })\n    },\n    success,\n    fail\n  });\n};","import { fetchResource } from \"./utils\";\nimport { REQUEST_BASE } from \"./constants\";\n\nexport const getPosts = (success, fail) => {\n  fetchResource({\n    url: REQUEST_BASE + '/posts',\n    options: {},\n    success,\n    fail\n  });\n};","import { createContext } from 'react';\n\nexport const UserContext = createContext(null);","import React, { useContext, useEffect, useState } from 'react';\nimport { getPosts } from '../api/posts';\nimport { UserContext } from './UserContext';\n\nexport const Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const isAuthed = useContext(UserContext);\n  const filteredPosts = posts.filter(post => post.title.includes(searchValue));\n\n  useEffect(() => {\n    getPosts(res => setPosts(res.data.posts), console.error)\n  }, [getPosts]);\n\n  return (<div>\n    <input type=\"text\" onChange={e => setSearchValue(e.target.value)} />\n    <ul>\n      {filteredPosts.map(post => {\n        console.log(post)\n        return ( \n          <li key={`${post.author._id}_${post.createdAt}`}>\n            {isAuthed && post.author._id} \n            <p>Location: {post.location}</p>\n            <p>Created by: {post.author.username}</p>\n            <p>Created at: {post.createdAt}</p>\n            <h2>{post.title}</h2>\n            <h3>Description: {post.description}</h3>\n            <p>Price: {post.price}</p>\n          </li>\n        );\n      })}\n    </ul>\n    </div>\n  )\n}","import React from 'react'\nimport { Login  } from '../components/Login'\n\nexport function Logout(props) {\n  return <button onClick={Logout}>Log out</button>;\n}\n\n","import React, { useState } from 'react';\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\n\nimport { Login } from './Login';\nimport { Posts } from './Posts';\nimport { UserContext } from './UserContext';\nimport { Logout } from './Logout';\n// import  Search  from './Search';\n\nexport const App = () => {\n  const [error, setError] = useState('');\n  const [jwt, setJWT] = useState(null);\n\n  const clearError = () => setError('');\n\n  const onAuthenticate = response => {\n    setJWT(response.data.token);\n  }\n\n  const onError = () => {\n    setError('Auth failed');\n  }\n\n  return (\n    <UserContext.Provider value={jwt}>\n      <BrowserRouter>\n        {jwt && <Logout />}\n        <nav className=\"navbar navbar-default\">\n         <h2>Stranger's Things</h2>\n          <div>\n            {/* <Search /> */}\n            <Link to=\"/login\" id='login'>Login/Register </Link>\n            <Link to=\"/posts\">Posting </Link>\n          </div>\n        </nav>\n        <Switch>\n          <Route\n            path=\"/login\"\n            component={!jwt ? () => <Login clearError={clearError} onAuthenticate={onAuthenticate} \n            onError={onError} /> : () => <h1>You are logged in.</h1>} /> \n          <Route path=\"/posts\" component={Posts} />\n        </Switch> \n      </BrowserRouter>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </UserContext.Provider>  \n  );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app'),\n);"],"sourceRoot":""}